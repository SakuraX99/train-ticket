apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-user-mysql
spec:
  selector:
    matchLabels:
      app: ts-user-mysql
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-user-mysql
    spec:
      containers:
        - name: ts-user-mysql
          image: mysql:5.7
          imagePullPolicy: IfNotPresent
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: root
            - name: MYSQL_DATABASE
              value: ts-user-mysql
          ports:
            - containerPort: 3306
          resources:
            requests:
              cpu: 50m
              memory: 100Mi
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-auth-mysql
spec:
  selector:
    matchLabels:
      app: ts-auth-mysql
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-auth-mysql
    spec:
      containers:
        - name: ts-auth-mysql
          image: mysql:5.7
          imagePullPolicy: IfNotPresent
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: root
            - name: MYSQL_DATABASE
              value: ts-auth-mysql
          ports:
            - containerPort: 3306
          resources:
            requests:
              cpu: 50m
              memory: 100Mi
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-route-mongo
spec:
  selector:
    matchLabels:
      app: ts-route-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-route-mongo
    spec:
      containers:
        - name: ts-route-mongo
          image: mongo
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 27017
          resources:
            requests:
              cpu: 50m
              memory: 100Mi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-contacts-mysql
spec:
  selector:
    matchLabels:
      app: ts-contacts-mysql
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-contacts-mysql
    spec:
      containers:
        - name: ts-contacts-mysql
          image: mysql:5.7
          imagePullPolicy: IfNotPresent
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: root
            - name: MYSQL_DATABASE
              value: ts-contacts-mysql
          ports:
            - containerPort: 3306
          resources:
            requests:
              cpu: 50m
              memory: 100Mi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-order-mysql
spec:
  selector:
    matchLabels:
      app: ts-order-mysql
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-order-mysql
    spec:
      containers:
        - name: ts-order-mysql
          image: mysql:5.7
          imagePullPolicy: IfNotPresent
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: root
            - name: MYSQL_DATABASE
              value: ts-order-mysql
          ports:
            - containerPort: 3306
          resources:
            requests:
              cpu: 50m
              memory: 100Mi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-order-other-mysql
spec:
  selector:
    matchLabels:
      app: ts-order-other-mysql
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-order-other-mysql
    spec:
      containers:
        - name: ts-order-other-mysql
          image: mysql:5.7
          imagePullPolicy: IfNotPresent
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: root
            - name: MYSQL_DATABASE
              value: ts-order-other-mysql
          ports:
            - containerPort: 3306
          resources:
            requests:
              cpu: 50m
              memory: 100Mi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-config-mysql
spec:
  selector:
    matchLabels:
      app: ts-config-mysql
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-config-mysql
    spec:
      containers:
        - name: ts-config-mysql
          image: mysql:5.7
          imagePullPolicy: IfNotPresent
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: root
            - name: MYSQL_DATABASE
              value: ts-config-mysql
          ports:
            - containerPort: 3306
          resources:
            requests:
              cpu: 50m
              memory: 100Mi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-station-mysql
spec:
  selector:
    matchLabels:
      app: ts-station-mysql
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-station-mysql
    spec:
      containers:
        - name: ts-station-mysql
          image: mysql:5.7
          imagePullPolicy: IfNotPresent
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: root
            - name: MYSQL_DATABASE
              value: ts-station-mysql
          ports:
            - containerPort: 3306
          resources:
            requests:
              cpu: 50m
              memory: 100Mi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-train-mysql
spec:
  selector:
    matchLabels:
      app: ts-train-mysql
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-train-mysql
    spec:
      containers:
        - name: ts-train-mysql
          image: mysql:5.7
          imagePullPolicy: IfNotPresent
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: root
            - name: MYSQL_DATABASE
              value: ts-train-mysql
          ports:
            - containerPort: 3306
          resources:
            requests:
              cpu: 50m
              memory: 100Mi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-travel-mongo
spec:
  selector:
    matchLabels:
      app: ts-travel-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-travel-mongo
    spec:
      containers:
        - name: ts-travel-mongo
          image: mongo
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 27017
          resources:
            requests:
              cpu: 50m
              memory: 100Mi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-travel2-mongo
spec:
  selector:
    matchLabels:
      app: ts-travel2-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-travel2-mongo
    spec:
      containers:
        - name: ts-travel2-mongo
          image: mongo
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 27017
          resources:
            requests:
              cpu: 50m
              memory: 100Mi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-price-mysql
spec:
  selector:
    matchLabels:
      app: ts-price-mysql
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-price-mysql
    spec:
      containers:
        - name: ts-price-mysql
          image: mysql:5.7
          imagePullPolicy: IfNotPresent
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: root
            - name: MYSQL_DATABASE
              value: ts-price-mysql
          ports:
            - containerPort: 3306
          resources:
            requests:
              cpu: 50m
              memory: 100Mi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-security-mongo
spec:
  selector:
    matchLabels:
      app: ts-security-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-security-mongo
    spec:
      containers:
        - name: ts-security-mongo
          image: mongo
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 27017
          resources:
            requests:
              cpu: 50m
              memory: 100Mi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-inside-payment-mongo
spec:
  selector:
    matchLabels:
      app: ts-inside-payment-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-inside-payment-mongo
    spec:
      containers:
        - name: ts-inside-payment-mongo
          image: mongo
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 27017
          resources:
            requests:
              cpu: 50m
              memory: 100Mi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-payment-mongo
spec:
  selector:
    matchLabels:
      app: ts-payment-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-payment-mongo
    spec:
      containers:
        - name: ts-payment-mongo
          image: mongo
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 27017
          resources:
            requests:
              cpu: 50m
              memory: 100Mi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-assurance-mongo
spec:
  selector:
    matchLabels:
      app: ts-assurance-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-assurance-mongo
    spec:
      containers:
        - name: ts-assurance-mongo
          image: mongo
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 27017
          resources:
            requests:
              cpu: 50m
              memory: 100Mi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-ticket-office-mongo
spec:
  selector:
    matchLabels:
      app: ts-ticket-office-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-ticket-office-mongo
    spec:
      containers:
        - name: ts-ticket-office-mongo
          image: mongo
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 27017
          resources:
            requests:
              cpu: 50m
              memory: 100Mi


---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-voucher-mysql
spec:
  selector:
    matchLabels:
      app: ts-voucher-mysql
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-voucher-mysql
    spec:
      containers:
        - name: ts-voucher-mysql
          image: mysql:5.6.35
          imagePullPolicy: IfNotPresent
          env:
            # Use secret in real usage
            - name: MYSQL_ROOT_PASSWORD
              value: root
          ports:
            - containerPort: 3306
          resources:
            requests:
              cpu: 50m
              memory: 100Mi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-station-food-service
spec:
  selector:
    matchLabels:
      app: ts-station-food-service
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-station-food-service
    spec:
      containers:
        - name: ts-station-food-service
          image: mysql:5.7
          imagePullPolicy: IfNotPresent
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: root
            - name: MYSQL_DATABASE
              value: ts-station-food-mysql
          ports:
            - containerPort: 3306
          resources:
            requests:
              cpu: 50m
              memory: 100Mi

---


apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-train-food-mongo
spec:
  selector:
    matchLabels:
      app: ts-train-food-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-train-food-mongo
    spec:
      containers:
        - name: ts-train-food-mongo
          image: mongo
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 27017
          resources:
            requests:
              cpu: 50m
              memory: 100Mi

---


apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-consign-mongo
spec:
  selector:
    matchLabels:
      app: ts-consign-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-consign-mongo
    spec:
      containers:
        - name: ts-consign-mongo
          image: mongo
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 27017
          resources:
            requests:
              cpu: 50m
              memory: 100Mi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-consign-price-mysql
spec:
  selector:
    matchLabels:
      app: ts-consign-price-mysql
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-consign-price-mysql
    spec:
      containers:
        - name: ts-consign-price-mysql
          image: mysql:5.7
          imagePullPolicy: IfNotPresent
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: root
            - name: MYSQL_DATABASE
              value: ts-consign-price-mysql
          ports:
            - containerPort: 3306
          resources:
            requests:
              cpu: 50m
              memory: 100Mi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-food-mongo
spec:
  selector:
    matchLabels:
      app: ts-food-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-food-mongo
    spec:
      containers:
        - name: ts-food-mongo
          image: mongo
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 27017
          resources:
            requests:
              cpu: 50m
              memory: 100Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-notification-mysql
spec:
  selector:
    matchLabels:
      app: ts-notification-mysql
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-notification-mysql
    spec:
      containers:
        - name: ts-notification-mysql
          image: mysql:5.7
          imagePullPolicy: IfNotPresent
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: root
            - name: MYSQL_DATABASE
              value: ts-notification-mysql
          ports:
            - containerPort: 3306
          resources:
            requests:
              cpu: 50m
              memory: 100Mi
---
apiVersion: v1
kind: Service
metadata:
  name: ts-notification-mysql
spec:
  ports:
    - port: 3306
  selector:
    app: ts-notification-mysql

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-delivery-mysql
spec:
  selector:
    matchLabels:
      app: ts-delivery-mysql
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-delivery-mysql
    spec:
      containers:
        - name: ts-delivery-mysql
          image: mysql:5.7
          imagePullPolicy: IfNotPresent
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: root
            - name: MYSQL_DATABASE
              value: ts-delivery-mysql
          ports:
            - containerPort: 3306
          resources:
            requests:
              cpu: 50m
              memory: 100Mi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-gateway-mongo
spec:
  selector:
    matchLabels:
      app: ts-gateway-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-gateway-mongo
    spec:
      containers:
        - name: ts-gateway-mongo
          image: mongo
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 27017
          resources:
            requests:
              cpu: 50m
              memory: 100Mi

---

apiVersion: v1
kind: Service
metadata:
  name: ts-delivery-mysql
spec:
  ports:
    - port: 3306
  selector:
    app: ts-delivery-mysql

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq
spec:
  selector:
    matchLabels:
      app: rabbitmq
  replicas: 1
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      containers:
        - name: rabbitmq
          image: rabbitmq:3
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5672
          resources:
            requests:
              cpu: 100m
              memory: 200Mi
---
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq
spec:
  ports:
    - port: 5672
  selector:
    app: rabbitmq

---
apiVersion: v1
kind: Service
metadata:
  name: ts-user-mysql
spec:
  ports:
    - port: 3306
  selector:
    app: ts-user-mysql

---
apiVersion: v1
kind: Service
metadata:
  name: ts-auth-mysql
spec:
  ports:
    - port: 3306
  selector:
    app: ts-auth-mysql
---

apiVersion: v1
kind: Service
metadata:
  name: ts-route-mongo
spec:
  ports:
    - port: 27017
  selector:
    app: ts-route-mongo

---

apiVersion: v1
kind: Service
metadata:
  name: ts-contacts-mysql
spec:
  ports:
    - port: 3306
  selector:
    app: ts-contacts-mysql

---

apiVersion: v1
kind: Service
metadata:
  name: ts-order-mysql
spec:
  ports:
    - port: 3306
  selector:
    app: ts-order-mysql

---

apiVersion: v1
kind: Service
metadata:
  name: ts-order-other-mysql
spec:
  ports:
    - port: 3306
  selector:
    app: ts-order-other-mysql

---

apiVersion: v1
kind: Service
metadata:
  name: ts-config-mysql
spec:
  ports:
    - port: 3306
  selector:
    app: ts-config-mysql

---

apiVersion: v1
kind: Service
metadata:
  name: ts-station-mysql
spec:
  ports:
    - port: 3306
  selector:
    app: ts-station-mysql

---

apiVersion: v1
kind: Service
metadata:
  name: ts-train-mysql
spec:
  ports:
    - port: 3306
  selector:
    app: ts-train-mysql

---

apiVersion: v1
kind: Service
metadata:
  name: ts-travel-mongo
spec:
  ports:
    - port: 27017
  selector:
    app: ts-travel-mongo

---

apiVersion: v1
kind: Service
metadata:
  name: ts-travel2-mongo
spec:
  ports:
    - port: 27017
  selector:
    app: ts-travel2-mongo

---

apiVersion: v1
kind: Service
metadata:
  name: ts-price-mysql
spec:
  ports:
    - port: 3306
  selector:
    app: ts-price-mysql

---

apiVersion: v1
kind: Service
metadata:
  name: ts-security-mongo
spec:
  ports:
    - port: 27017
  selector:
    app: ts-security-mongo

---

apiVersion: v1
kind: Service
metadata:
  name: ts-inside-payment-mongo
spec:
  ports:
    - port: 27017
  selector:
    app: ts-inside-payment-mongo

---

apiVersion: v1
kind: Service
metadata:
  name: ts-payment-mongo
spec:
  ports:
    - port: 27017
  selector:
    app: ts-payment-mongo

---

apiVersion: v1
kind: Service
metadata:
  name: ts-assurance-mongo
spec:
  ports:
    - port: 27017
  selector:
    app: ts-assurance-mongo

---

apiVersion: v1
kind: Service
metadata:
  name: ts-ticket-office-mongo
spec:
  ports:
    - port: 27017
  selector:
    app: ts-ticket-office-mongo

---

apiVersion: v1
kind: Service
metadata:
  name: ts-voucher-mysql
spec:
  ports:
    - port: 3306
  selector:
    app: ts-voucher-mysql

---

apiVersion: v1
kind: Service
metadata:
  name: ts-station-food-mysql
spec:
  ports:
    - port: 3306
  selector:
    app: ts-station-food-mysql

---

apiVersion: v1
kind: Service
metadata:
  name: ts-train-food-mongo
spec:
  ports:
    - port: 27017
  selector:
    app: ts-train-food-mongo

---


apiVersion: v1
kind: Service
metadata:
  name: ts-consign-mongo
spec:
  ports:
    - port: 27017
  selector:
    app: ts-consign-mongo

---

apiVersion: v1
kind: Service
metadata:
  name: ts-consign-price-mysql
spec:
  ports:
    - port: 3306
  selector:
    app: ts-consign-price-mysql

---

apiVersion: v1
kind: Service
metadata:
  name: ts-food-mongo
spec:
  ports:
    - port: 27017
  selector:
    app: ts-food-mongo

---
apiVersion: v1
kind: Service
metadata:
  name: ts-gateway-mongo
spec:
  ports:
    - port: 27017
  selector:
    app: ts-gateway-mongo
---
#deploy cluster nacos
apiVersion: v1
kind: Service
metadata:
  name: nacos-server
#  namespace: pie-engine-studio
  labels:
    app: nacos-headless
spec:
  ports:
    - port: 8848
      name: server
      targetPort: 8848
      nodePort: 30807
    - port: 7848
      name: rpc
      targetPort: 7848
  selector:
    app: nacos
  type: NodePort

---
apiVersion: v1
kind: Service
metadata:
  name: nacos-headless
#  namespace: pie-engine-studio
  labels:
    app: nacos-headless
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - port: 8848
      name: server
      targetPort: 8848
    - port: 7848
      name: rpc
      targetPort: 7848
    - port: 9848
      name: client-rpc
      targetPort: 9848
    - port: 9849
      name: raft-rpc
      targetPort: 9849
  selector:
    app: nacos
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: nacos
#  namespace: pie-engine-studio
spec:
  serviceName: nacos-headless
  replicas: 3
  template:
    metadata:
      labels:
        app: nacos
      annotations:
        pod.alpha.kubernetes.io/initialized: "true"
    spec:
      #      affinity:
      #        podAntiAffinity:
      #          requiredDuringSchedulingIgnoredDuringExecution:
      #            - labelSelector:
      #                matchExpressions:
      #                  - key: "app"
      #                    operator: In
      #                    values:
      #                      - nacos-headless
      #              topologyKey: "kubernetes.io/hostname"
      #      nodeSelector:
      #        engine.node.studio: "true"
      containers:
        - name: k8snacos
          imagePullPolicy: IfNotPresent
          image:  nacos/nacos-server:1.3.1
          resources:
            requests:
              memory: "500Mi"
              cpu: "400m"
          ports:
            - containerPort: 8848
              name: client
            - containerPort: 7848
              name: rpc
            - containerPort: 9848
              name: client-rpc
            - containerPort: 9849
              name: raft-rpc
          env:
            - name: NACOS_REPLICAS
              value: "3"
            - name: MYSQL_SERVICE_HOST
              value: "10.176.122.1"
            - name: MYSQL_SERVICE_DB_NAME
              value: "nacos"
            - name: MYSQL_SERVICE_PORT
              value: "3306"
            - name: MYSQL_SERVICE_USER
              value: "root"
            - name: MYSQL_SERVICE_PASSWORD
              value: "Abcd1234#"
            - name: NACOS_SERVER_PORT
              value: "8848"
            - name: PREFER_HOST_MODE
              value: "hostname"
            - name: NACOS_SERVERS
              value: "nacos-0.nacos-headless.default.svc.cluster.local:8848 nacos-1.nacos-headless.default.svc.cluster.local:8848 nacos-2.nacos-headless.default.svc.cluster.local:8848"
            - name: MODE
              value: "cluster"
  selector:
    matchLabels:
      app: nacos
